---
let { name, imageUrl, price, currency = 'INR', isSoldOut } = Astro.props; // Default to 'INR' if no currency is passed

// Function to format currency
const formatCurrency = (amount: number, currency: string) =>
  new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: currency,
    minimumFractionDigits: 2,
  }).format(amount);

// Fetch exchange rates only if the currency is not INR
let exchangeRateData = null;

if (currency !== 'INR') {
    const apiKey = import.meta.env.VITE_EXCHANGE_API_KEY;  
  try {
    const response = await fetch(`https://v6.exchangerate-api.com/v6/${apiKey}/latest/USD`);
    const data = await response.json();
    exchangeRateData = data;
  } catch (error) {
    console.error('Error fetching exchange rates:', error);
  }
}
  
---

<div class="product-card">
  <div class="product-tumb">
    <img src={imageUrl} alt={name} />
  </div>

  <div class="product-details">
    <h4>{name}</h4>
    <div class="product-bottom-details">
      {isSoldOut ? (
        <div class="sold-out-text">Sold Out</div>
      ) : (
        <div class="product-price">
          {currency === 'INR' ? (
            formatCurrency(price, 'INR')
          ) : (
            // Convert price to selected currency using exchange rate if available
            exchangeRateData ? formatCurrency(price * exchangeRateData.conversion_rates[currency], currency) : formatCurrency(price, 'USD')
          )}
        </div>
      )}
    </div>
  </div>
</div>

<style>
  @import url('https://fonts.googleapis.com/css2?family=DM+Serif+Display&family=Roboto:wght@400;500&display=swap');

  .product-card {
    width: 320px;
    border-radius: 12px; /* Rounded corners for the entire card */
    overflow: hidden;
    background: #fff6f0; /* pastel peach */
    box-shadow: 0 5px 15px rgba(0,0,0,0.08);
    position: relative;
    font-family: 'Roboto', sans-serif;
  }

  .product-tumb {
    height: 320px;
    background: #ffefea; /* lighter pastel peach */
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    border-radius: 0; /* Unrounded image */
  }

  .product-tumb img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    border-radius: 0; /* Unrounded image */
  }

  .product-details {
    padding: 14px 20px;
    text-align: center;
    background: #fffaf5;
  }

  .product-details h4 {
    font-size: 1rem;
    font-weight: 500;
    color: #333;
    text-transform: uppercase;
    margin-bottom: 4px;
  }

  .product-bottom-details {
    margin-top: 4px;
  }

  .product-price {
    font-size: 1rem;
    font-weight: 600;
    color: #e2a800;
  }

  .sold-out-text {
    font-size: 1rem;
    font-weight: 600;
    color: #d00000;
    text-transform: uppercase;
  }
</style>
